---
- name: Installation NGINX
  hosts: lighthouse
  handlers:
    - name: Start-nginx
      become: true
      ansible.builtin.command: nginx
      register: nginx_start_output
      changed_when: nginx_start_output.rc != 0
    - name: Reload-nginx
      become: true
      ansible.builtin.command: nginx -s reload
      register: nginx_reload_output
      changed_when: nginx_reload_output.rc != 0
  tasks:
    - name: NGINX | Install epel-release
      become: true
      ansible.builtin.yum:
        name: epel-release
        state: present
    - name: NGINX | Install_NGINX
      become: true
      ansible.builtin.yum:
        name: nginx
        state: present
    - name: NGINX | Create general config
      become: true
      ansible.builtin.template:
        src: template/nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        mode: "0644"
      notify: Reload-nginx
  tags: nginx

- name: LIGHTHOUSE | Install Lighthouse
  hosts: lighthouse
  handlers:
    - name: Reload-nginx
      become: true
      ansible.builtin.command: nginx -s reload
      register: nginx_reload_output
      changed_when: nginx_reload_output.rc != 0
  pre_tasks:
    - name: LIGHTHOUSE | Install dependencies
      become: true
      ansible.builtin.yum:
        name: git
        state: present
  tasks:
    - name: LIGHTHOUSE | Get lighthouse distrib
      ansible.builtin.get_url:
        url: "https://github.com/VKCOM/lighthouse/archive/refs/heads/master.zip"
        dest: "./lighthouse.zip"
        mode: "0644"
    - name: LIGHTHOUSE | Create lighthouse directory
      ansible.builtin.file:
        path: /usr/share/nginx/html/lighthouse
        state: directory
        mode: "0644"
    - name: LIGHTHOUSE | Unarchive lighthouse distrib into nginx
      become: true
      ansible.builtin.unarchive:
        src: ./lighthouse.zip
        dest: /usr/share/nginx/html/lighthouse
        remote_src: true
    - name: LIGHTHOUSE | copy lighthouse nginx config
      ansible.builtin.template:
        src: lighthouse_conf.j2
        dest: /etc/nginx/conf.d/default.conf
        mode: "0644"
      notify: Reload-nginx
  tags: lighthouse

- name: CLICKHOUSE | Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - name: CLICKHOUSE | Install_clickhouse
      tags: clickhouse
      block:
        - name: Clickhouse | Get clickhouse distribs
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
            mode: "0644"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Clickhouse | Get clickhouse distrib resque
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
            mode: "0644"
    - name: CLICKHOUSE | Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      tags: clickhouse
      notify: Start clickhouse service
    - name: Flush handlers
      ansible.legacy.meta: flush_handlers
    - name: CLICKHOUSE | Create database
      ansible.builtin.command: "clickhouse-client -q 'create database nginxdb;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0
    - name: Create table for logs
      become: true
      ansible.builtin.command: clickhouse-client -q
        'CREATE TABLE IF NOT EXISTS  nginxdb.access_logs (
        message String
        )
        ENGINE = MergeTree()
        ORDER BY tuple();'
      register: create_table
      changed_when: create_table != 0
      tags: clickhouse

- name: VECTOR | Install Vector
  hosts: vector
  handlers:
    - name: Restart vector service
      become: true
      ansible.builtin.service:
        name: vector
        state: restarted
  tasks:
    - name: VECTOR | Get RPM Vector
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-1.x86_64.rpm"
        dest: "./vector-{{ vector_version }}.rpm"
        mode: "0644"
      tags: vector
    - name: VECTOR | Install vector package
      become: true
      ansible.builtin.yum:
        name:
          - vector-{{ vector_version }}.rpm
      tags: vector
    - name: VECTOR | create systemd unit
      become: true
      ansible.builtin.template:
        src: "vector.service.j2"
        dest: "/etc/systemd/system/vector.service"
        mode: "0644"
    - name: VECTOR | Create vector configuration
      become: true
      ansible.builtin.file:
        path: "{{ vector_conf_dir }}"
        state: directory
        mode: "0644"
      tags: vector
    - name: VECTOR | Using vector template
      become: true
      ansible.builtin.template:
        src: "template/vector.j2"
        dest: "{{ vector_conf_dir }}/vector.toml"
        mode: "0644"

    - name: VECTOR | start vector service
      become: true
      ansible.builtin.systemd:
        name: vector
        state: started
        daemon_reload: true
